{"version":3,"sources":["images/assets/planet.svg","components/Header.js","redux/mission/mission.js","components/mission.js","components/profile.js","redux/rocket/rocket.js","components/rocket.js","App.js","redux/configureStore.js","index.js"],"names":["Header","className","src","planet","alt","activeClassName","to","UPDATE_ALL","UPDATE_FROM_API","SET_MISSION_STATE","firstLoadState","initialState","updateState","payload","type","MissionComponent","dispatch","useDispatch","missionData","useSelector","state","missionReducer","useEffect","map","data","mission_name","description","mission_status","onClick","key","status","mission_id","id","value","ProfileComponent","rocketData","rocketReducer","filteredMissionData","filter","item","filteredRocketData","rocket_status","length","rocket_name","GET_INFO","API_CALL","SET_STATE","setReservationState","RocketComponent","RocketData","flickr_images","rocket_type","rocket_id","App","exact","path","reducer","combineReducers","action","payloadHolder","stateHolder","stateArray","logic","forEach","push","composedEnhancer","compose","applyMiddleware","store","next","fetch","headers","then","response","json","logger","createStore","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0ad1c7a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/planet.a63017b2.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport planet from '../images/assets/planet.svg';\n\nconst Header = () => (\n  <div className=\"nav_bar_container\">\n    <div className=\"logoflex\">\n      <img className=\"logo_img\" src={planet} alt=\"logo\" />\n      <h1 className=\"logo_title montserrat-bold\">Space Travelers&apos; Hub</h1>\n    </div>\n    <ul className=\"nav_links\">\n      <li className=\"montserrat-regular navLinkWrapper\">\n        <NavLink className=\"navLink\" activeClassName=\"selected_link\" to=\"/rocket\">Rocket</NavLink>\n      </li>\n      <li className=\"montserrat-regular navLinkWrapper\">\n        <NavLink className=\"navLink\" activeClassName=\"selected_link\" to=\"/mission\">Mission</NavLink>\n      </li>\n      <li className=\"montserrat-regular navLinkWrapper\">\n        |\n      </li>\n      <li className=\"montserrat-regular navLinkWrapper\">\n        <NavLink className=\"navLink\" activeClassName=\"selected_link\" to=\"/profile\">Profile</NavLink>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Header;\n","const UPDATE_ALL = 'redux/mission/UPDATE_ALL';\nconst UPDATE_FROM_API = 'redux/mission/UPDATE_FROM_API';\nconst SET_MISSION_STATE = 'redux/mission/SET_MISSION_STATE';\nlet firstLoadState = true;\nconst initialState = [];\n\nconst retrieveInfo = (payload) => ({\n  type: UPDATE_ALL,\n  payload,\n});\nconst loadFromAPI = (payload) => ({\n  type: UPDATE_FROM_API,\n  payload,\n});\nconst updateState = (payload) => ({\n  type: SET_MISSION_STATE,\n  payload,\n});\n// -------------- Reducer ----------------------------\nconst missionReducer = (state = initialState, action) => {\n  const payloadHolder = action.payload;\n  const stateHolder = state;\n  const stateArray = [];\n  const logic = (item) => {\n    if (item.mission_id === action.payload.id) {\n      return action.payload.value;\n    } if (item.mission_status) {\n      return true;\n    }\n    return false;\n  };\n  switch (action.type) {\n    case UPDATE_ALL:\n      return state;\n    case UPDATE_FROM_API:\n      return payloadHolder;\n    case SET_MISSION_STATE:\n      stateHolder.forEach((item) => {\n        stateArray.push({\n          mission_id: item.mission_id,\n          mission_name: item.mission_name,\n          description: item.description,\n          mission_status: logic(item),\n        });\n      });\n      return stateArray;\n    default:\n      return state;\n  }\n};\n// -------------- Middlewares ----------------------------\nconst getMissionsMiddleware = (store) => (next) => (action) => {\n  if (firstLoadState) {\n    firstLoadState = false;\n    fetch('https://api.spacexdata.com/v3/missions',\n      {\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      }).then((response) => response.json())\n      .then((json) => store.dispatch(loadFromAPI(json)));\n  }\n  next(action);\n};\n\nexport {\n  missionReducer,\n  retrieveInfo,\n  loadFromAPI,\n  getMissionsMiddleware,\n  updateState,\n};\n","import { React, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { retrieveInfo, updateState } from '../redux/mission/mission';\n\nconst MissionComponent = () => {\n  const dispatch = useDispatch();\n  const missionData = useSelector((state) => state.missionReducer);\n  useEffect(() => {\n    dispatch(retrieveInfo([]));\n  }, []);\n\n  const handleMissionStateClick = (key, status) => {\n    if (status) {\n      dispatch(updateState({\n        id: key,\n        value: false,\n      }));\n    } else {\n      dispatch(updateState({\n        id: key,\n        value: true,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"mission_grid\">\n      <div className=\"mission_wrapper\">\n        <div className=\"montserrat-regular title_item\">Mission</div>\n        <div className=\"montserrat-regular title_item\">Description</div>\n        <div className=\"montserrat-regular title_item\">Status</div>\n        <div className=\"montserrat-regular title_item\"> </div>\n      </div>\n      {missionData.map((data) => (\n        <div className=\"mission_wrapper\" key={data.mission_id}>\n          <div className=\"montserrat-regular mission_item\"><p>{data.mission_name}</p></div>\n          <div className=\"montserrat-regular mission_item_text\">{data.description}</div>\n          <div className=\"montserrat-regular mission_item\"><div className={data.mission_status ? 'active_member' : 'not_member'}>{data.mission_status ? 'Active Member' : 'NOT A MEMBER'}</div></div>\n          <div className=\"montserrat-regular mission_item\"><button className={data.mission_status ? 'active_member_btn' : 'not_member_btn'} onClick={() => { handleMissionStateClick(data.mission_id, data.mission_status); }} type=\"button\" id=\"member_btn\">{data.mission_status ? 'Leave Mission' : 'Join Mission'}</button></div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MissionComponent;\n","import { React } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst ProfileComponent = () => {\n  const missionData = useSelector((state) => state.missionReducer);\n  const rocketData = useSelector((state) => state.rocketReducer);\n  const filteredMissionData = missionData.filter((item) => item.mission_status === true);\n  const filteredRocketData = rocketData.filter((item) => item.rocket_status === true);\n\n  return (\n    <div className=\"profile-section-container\">\n      <div className=\"profile-container\">\n        <h1 className=\"profile-title roboto-bold\">My Missions</h1>\n        <ul className={filteredMissionData.length === 0 ? 'profile-table-none' : 'profile-table'}>\n          {filteredMissionData.map((data) => (\n            <li className=\"profile-list montserrat-light\" key={data.mission_name}>{data.mission_name}</li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"profile-container\">\n        <h1 className=\"profile-title roboto-bold\">My Rockets</h1>\n        <ul className={filteredRocketData.length === 0 ? 'profile-table-none' : 'profile-table'}>\n          {filteredRocketData.map((data) => (\n            <li className=\"profile-list montserrat-light\" key={data.rocket_name}>{data.rocket_name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileComponent;\n","const GET_INFO = 'redux/rocket/GET_INFO';\nconst API_CALL = 'redux/rocket/API_CALL';\nconst SET_STATE = 'redux/rocket/SET_STATE';\nlet firstLoadState = true;\nconst initialState = [];\n\nconst getInformation = (payload) => ({\n  type: GET_INFO,\n  payload,\n});\nconst APICall = (payload) => ({\n  type: API_CALL,\n  payload,\n});\nconst setReservationState = (payload) => ({\n  type: SET_STATE,\n  payload,\n});\n\nconst rocketReducer = (state = initialState, action) => {\n  const payloadHolder = action.payload;\n  const stateHolder = state;\n  const stateArray = [];\n  const logic = (item) => {\n    if (item.rocket_id === action.payload.id) {\n      return action.payload.value;\n    } if (item.rocket_status) {\n      return true;\n    }\n    return false;\n  };\n  switch (action.type) {\n    case GET_INFO:\n      return state;\n    case API_CALL:\n      return payloadHolder;\n    case SET_STATE:\n      stateHolder.forEach((item) => {\n        stateArray.push({\n          rocket_id: item.rocket_id,\n          description: item.description,\n          rocket_name: item.rocket_name,\n          rocket_type: item.rocket_type,\n          flickr_images: item.flickr_images,\n          rocket_status: logic(item),\n        });\n      });\n      return stateArray;\n    default:\n      return state;\n  }\n};\n\nconst getRocketMiddleware = (store) => (next) => (action) => {\n  if (firstLoadState) {\n    firstLoadState = false;\n    fetch('https://api.spacexdata.com/v3/rockets',\n      {\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      }).then((response) => response.json())\n      .then((json) => store.dispatch(APICall(json)));\n  }\n  next(action);\n};\n\nexport {\n  rocketReducer,\n  getInformation,\n  APICall,\n  getRocketMiddleware,\n  setReservationState,\n};\n","import { React, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getInformation, setReservationState } from '../redux/rocket/rocket';\n\nconst RocketComponent = () => {\n  const dispatch = useDispatch();\n  const RocketData = useSelector((state) => state.rocketReducer);\n  useEffect(() => {\n    dispatch(getInformation([]));\n  }, []);\n\n  const handleRocketStateClick = (key, status) => {\n    if (status) {\n      dispatch(setReservationState({\n        id: key,\n        value: false,\n      }));\n    } else {\n      dispatch(setReservationState({\n        id: key,\n        value: true,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"rocket-section-container\">\n      {RocketData.map((data) => (\n        <div key={data.rocket_id} className=\"rocket-container\">\n          <img src={data.flickr_images} alt={data.rocket_type} className=\"rocket-image\" />\n          <div className=\"rocket-description-container\">\n            <div className=\"rocket-description-name montserrat-bold\">{data.rocket_name}</div>\n            <p className=\"rocket-description roboto-bold\">\n              {data.rocket_status ? <span className=\"rocket-description-reserved roboto-bold\">Reserved</span> : <span />}\n              {data.description}\n            </p>\n            <div><button onClick={() => { handleRocketStateClick(data.rocket_id, data.rocket_status); }} className={data.rocket_status ? 'reserve-rocket' : 'rocket-description-button'} type=\"button\">{data.rocket_status ? 'Cancel Reservation' : 'Reserve Rocket'}</button></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RocketComponent;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Header from './components/Header';\nimport MissionComponent from './components/mission';\nimport ProfileComponent from './components/profile';\nimport RocketComponent from './components/rocket';\n\nconst App = () => (\n  <Router>\n    <div className=\"\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/rocket\" />\n        </Route>\n        <Route path=\"/rocket\">\n          <RocketComponent />\n        </Route>\n        <Route path=\"/mission\">\n          <MissionComponent />\n        </Route>\n        <Route path=\"/profile\">\n          <ProfileComponent />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n);\nexport default App;\n","import {\n  createStore, compose, combineReducers, applyMiddleware,\n} from 'redux';\nimport logger from 'redux-logger';\nimport { rocketReducer, getRocketMiddleware } from './rocket/rocket';\nimport { missionReducer, getMissionsMiddleware } from './mission/mission';\n\nconst reducer = combineReducers({\n  rocketReducer,\n  missionReducer,\n});\n\nconst composedEnhancer = compose(\n  applyMiddleware(getMissionsMiddleware),\n  applyMiddleware(getRocketMiddleware),\n  applyMiddleware(logger),\n);\n\nconst store = createStore(\n  reducer,\n  undefined,\n  composedEnhancer,\n);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/_main.scss';\nimport './styles/_mision.scss';\nimport './styles/_profile.scss';\nimport './styles/_rockets.scss';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}